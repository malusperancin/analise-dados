print("Hello World!")
"oi"
"oi"
"oi"
"alo"
"oi"
"alo"
x <- 5
x
x <- 5
x
x <- 5
x
x <- 5
x
x applyTheme(name)
applyTheme(name)
applyTheme(name)
styler:::set_style_transformers()
c(1,2,3,4,5)
c(1,2,3,4,5)(3)
c(1,2,3,4,5)[3]
x <- c(1,2,3,4)
x
c(1,2,3,"4",5,6)
x <- c(1,2,3,"abc",4,6)
x
sec(1,10,2)
seq(1,10,2)
c("1,2,3","2,4,4,1","casa")
c("1,2,3","2,4,4,1","1,2")
c("1,2,3","2,4,4,1","1,2",1)
c("1,2,3","2,4,4,1","1,2",1)
x <- c("1,2,3","2,4,4,1","1,2",1)
class(x)
x <- c("1,2,3","2,4,4,1","1,2",1,"casa")
class(x)
a <- -1.5:6; a
as.integer(a)
as.logical(a)
a <- as.integer(a)
as.logical(a)
cont <- c(8, 4, NA, 9, 6, 1, 7, 9)
cont[-1]
cont[c(1:4)]
vec(cont)
rev(cont)
mat <- 1:20; mat
dim(mat) <- c(4,5); mat
dim(mat) <- c(4,5,2); mat
teste <- 1:8; teste
dim(teste) <- c(2,2,2)
teste
aluno <- c("Joao", "Pedro", "Maria")
sala <- c(2,1,3)
escola <- data.frame(Aluno=aluno, Sala=sala,
+ stringsAsFactors=FALSE); escola
escola <- data.frame(Aluno=aluno, Sala=sala,
stringsAsFactors=FALSE); escola
escola<-cbind(escola,Aprovado=c(T,F,T)); escola
escola <- data.frame(Sala=sala, Aprovado=aprovado, Media=c(8,4,9),
+ row.names=aluno); escola
escola <- data.frame(Sala=sala, Aprovado=aprovado, Media=c(8,4,9),
row.names=aluno); escola
aprovado <- c(T,F,T)
escola <- data.frame(Sala=sala, Aprovado=aprovado, Media=c(8,4,9),
row.names=aluno); escola
> rownames(escola) <- c("A","B","C")
rownames(escola) <- c("A","B","C")
escola
rownames(escola) <- c("A","B","C","D")
escola <- data.frame(Sala=sala, Aprovado=aprovado, Media=c(8,4,9),
row.names=aluno); escola
#Bibliotecas importadas para o projeto
library(ggplot2)
library(ggExtra)
library(gridExtra)
#Criação do data frame
nomes <- c("horario", "temperatura", "vento", "umidade", "sensacao")
dados <- read.csv("D:/Documentos/GitHub/AnaliseR/ProjetoR/cepagri.csv", header=FALSE, sep=";", col.names = nomes)
rm(list=ls())
library(ggplot2)
library(ggExtra)
library(gridExtra)
library(RColorBrewer)
titulos <- c("horario", "temperatura", "vento", "umidade", "sensacao")
#pegamos o dado no arquivo e colocamos no data frame
cepagri <- read.csv("cepagri.csv", header = FALSE, sep = ";", col.names = titulos)
#convertemos e formatamos a data para POSIXct
cepagri[["horario"]] <- as.POSIXct(cepagri[["horario"]], format="%d/%m/%Y-%H:%M")
#pegamos os dados entre 01/01/2015 e 31/12/2020
cepagri <- cepagri[cepagri[["horario"]] >= "2015-01-01" & cepagri[["horario"]] <= "2020-12-31",]
#tiramos os dados que possuem erro/null
cepagri <- na.omit(cepagri)
#transformamos a temp em numeric (os outros campos ja ta)
cepagri[["temperatura"]] <- as.numeric(cepagri[["temperatura"]])
for(i in 1:nrow(cepagri)){
if(cepagri$sensacao[i] >= 99.9)
{
cepagri$sensacao[i] <- mean(c( cepagri$sensacao[i-1], cepagri$sensacao[i+1]))
}
if(cepagri$umidade[i] == 0)
{
#faz uma media de todos os indices de umidade do dia
cepagri$umidade[i] <- mean(cepagri$umidade[cepagri$horario >= cepagri$horario[i-1] & cepagri$horario < cepagri$horario[i]])
}
}
dados <- cepagri #dados prontos
rm(list=ls())
library(ggplot2)
library(ggExtra)
library(gridExtra)
library(RColorBrewer)
titulos <- c("horario", "temperatura", "vento", "umidade", "sensacao")
#pegamos o dado no arquivo e colocamos no data frame
cepagri <- read.csv("cepagri.csv", header = FALSE, sep = ";", col.names = titulos)
rm(list=ls())
setwd("~/GitHub/analise-dados")
rm(list=ls())
library(ggplot2)
library(ggExtra)
library(gridExtra)
library(RColorBrewer)
titulos <- c("horario", "temperatura", "vento", "umidade", "sensacao")
#pegamos o dado no arquivo e colocamos no data frame
cepagri <- read.csv("cepagri.csv", header = FALSE, sep = ";", col.names = titulos)
#convertemos e formatamos a data para POSIXct
cepagri[["horario"]] <- as.POSIXct(cepagri[["horario"]], format="%d/%m/%Y-%H:%M")
#pegamos os dados entre 01/01/2015 e 31/12/2020
cepagri <- cepagri[cepagri[["horario"]] >= "2015-01-01" & cepagri[["horario"]] <= "2020-12-31",]
#tiramos os dados que possuem erro/null
cepagri <- na.omit(cepagri)
#transformamos a temp em numeric (os outros campos ja ta)
cepagri[["temperatura"]] <- as.numeric(cepagri[["temperatura"]])
for(i in 1:nrow(cepagri)){
if(cepagri$sensacao[i] >= 99.9)
{
cepagri$sensacao[i] <- mean(c( cepagri$sensacao[i-1], cepagri$sensacao[i+1]))
}
if(cepagri$umidade[i] == 0)
{
#faz uma media de todos os indices de umidade do dia
cepagri$umidade[i] <- mean(cepagri$umidade[cepagri$horario >= cepagri$horario[i-1] & cepagri$horario < cepagri$horario[i]])
}
}
dados <- cepagri #dados prontos
meses <- factor(month.abb[as.integer(format(as.Date(dados[["horario"]]),"%m"))], levels = month.abb, ordered = TRUE)
anos <- factor(as.integer(format(as.Date(dados[["horario"]]),"%Y")), levels = c(2015:2020), ordered = TRUE)
h2020 <- dados[dados[["horario"]] >= "2020-01-01" & dados[["horario"]] <= "2020-12-31",]
meses2020 <- factor(month.abb[as.integer(format(as.Date(h2020[["horario"]]),"%m"))], levels = month.abb, ordered = TRUE)
h2019 <- dados[dados[["horario"]] >= "2019-01-01" & dados[["horario"]] <= "2019-12-31",]
meses2019 <- factor(month.abb[as.integer(format(as.Date(h2019[["horario"]]),"%m"))], levels = month.abb, ordered = TRUE)
h2018 <- dados[dados[["horario"]] > "2017-12-31" & dados[["horario"]] <= "2018-12-31",]
meses2018 <- factor(month.abb[as.integer(format(as.Date(h2018[["horario"]]),"%m"))], levels = month.abb, ordered = TRUE)
h2017 <- dados[dados[["horario"]] >= "2017-01-01" & dados[["horario"]] <= "2017-12-31",]
meses2017 <- factor(month.abb[as.integer(format(as.Date(h2017[["horario"]]),"%m"))], levels = month.abb, ordered = TRUE)
h2016 <- dados[dados[["horario"]] >= "2016-01-01" & dados[["horario"]] <= "2016-12-31",]
meses2016 <- factor(month.abb[as.integer(format(as.Date(h2016[["horario"]]),"%m"))], levels = month.abb, ordered = TRUE)
h2015 <- dados[dados[["horario"]] >= "2015-01-01" & dados[["horario"]] <= "2015-12-31",]
meses2015 <- factor(month.abb[as.integer(format(as.Date(h2015[["horario"]]),"%m"))], levels = month.abb, ordered = TRUE)
#VENTO UMIDADE E TEMPERATURA usando ggMarginal
plot4 <- ggplot(dados, aes(x=temperatura, y=vento, color=umidade)) + geom_point() + theme_bw()
plot4 <- ggMarginal(plot4, type="density")
plot4
#TEMPERATURA ano 2018 LINE
plot4 <- ggplot(h2018, aes(x=meses2018, y=temperatura, colour=temperatura))
plot4 <- plot4 + geom_point()
plot4 <- plot4 + geom_line()
plot4
#UMIDADE EM 2018 usando boxplot
plot6 <- ggplot(h2018, aes(y=umidade, x=meses2018, group=meses2018,fill=meses2018))
plot6 <- plot6 + geom_boxplot()
plot6
rm(list=ls())
library(ggplot2)
library(ggExtra)
library(gridExtra)
library(RColorBrewer)
titulos <- c("horario", "temperatura", "vento", "umidade", "sensacao")
#pegamos o dado no arquivo e colocamos no data frame
cepagri <- read.csv("cepagri.csv", header = FALSE, sep = ";", col.names = titulos)
#convertemos e formatamos a data para POSIXct
cepagri[["horario"]] <- as.POSIXct(cepagri[["horario"]], format="%d/%m/%Y-%H:%M")
#pegamos os dados entre 01/01/2015 e 31/12/2020
cepagri <- cepagri[cepagri[["horario"]] >= "2015-01-01" & cepagri[["horario"]] <= "2020-12-31",]
#tiramos os dados que possuem erro/null
cepagri <- na.omit(cepagri)
#transformamos a temp em numeric (os outros campos ja ta)
cepagri[["temperatura"]] <- as.numeric(cepagri[["temperatura"]])
for(i in 1:nrow(cepagri)){
if(cepagri$sensacao[i] >= 99.9)
{
cepagri$sensacao[i] <- mean(c( cepagri$sensacao[i-1], cepagri$sensacao[i+1]))
}
if(cepagri$umidade[i] == 0)
{
#faz uma media de todos os indices de umidade do dia
cepagri$umidade[i] <- mean(cepagri$umidade[cepagri$horario >= cepagri$horario[i-1] & cepagri$horario < cepagri$horario[i]])
}
}
dados <- cepagri #dados prontos
meses <- factor(month.abb[as.integer(format(as.Date(dados[["horario"]]),"%m"))], levels = month.abb, ordered = TRUE)
anos <- factor(as.integer(format(as.Date(dados[["horario"]]),"%Y")), levels = c(2015:2020), ordered = TRUE)
h2018 <- dados[dados[["horario"]] > "2017-12-31" & dados[["horario"]] <= "2018-12-31",]
meses2018 <- factor(month.abb[as.integer(format(as.Date(h2018[["horario"]]),"%m"))], levels = month.abb, ordered = TRUE)
h2015 <- dados[dados[["horario"]] >= "2015-01-01" & dados[["horario"]] <= "2015-12-31",]
meses2015 <- factor(month.abb[as.integer(format(as.Date(h2015[["horario"]]),"%m"))], levels = month.abb, ordered = TRUE)
#TEMPERATURA POR HORARIO usando geom_line
plot1 <- ggplot(dados, aes(y=temperatura, x=horario, colour=temperatura))
plot1 <- plot1 + geom_line()
plot1
#TEMPERATURA POR HORARIO usando geom_line
plot1 <- ggplot(dados, aes(y=temperatura, x=horario, colour=temperatura))
plot1 <- plot1 + geom_line()
plot1
rm(list=ls())
library(ggplot2)
library(ggExtra)
library(gridExtra)
library(RColorBrewer)
titulos <- c("horario", "temperatura", "vento", "umidade", "sensacao")
#pegamos o dado no arquivo e colocamos no data frame
cepagri <- read.csv("cepagri.csv", header = FALSE, sep = ";", col.names = titulos)
#convertemos e formatamos a data para POSIXct
cepagri[["horario"]] <- as.POSIXct(cepagri[["horario"]], format="%d/%m/%Y-%H:%M")
#pegamos os dados entre 01/01/2015 e 31/12/2020
cepagri <- cepagri[cepagri[["horario"]] >= "2015-01-01" & cepagri[["horario"]] <= "2020-12-31",]
#tiramos os dados que possuem erro/null
cepagri <- na.omit(cepagri)
#transformamos a temp em numeric (os outros campos ja ta)
cepagri[["temperatura"]] <- as.numeric(cepagri[["temperatura"]])
for(i in 1:nrow(cepagri)){
if(cepagri$sensacao[i] >= 99.9)
{
cepagri$sensacao[i] <- mean(c( cepagri$sensacao[i-1], cepagri$sensacao[i+1]))
}
if(cepagri$umidade[i] == 0)
{
#faz uma media de todos os indices de umidade do dia
cepagri$umidade[i] <- mean(cepagri$umidade[cepagri$horario >= cepagri$horario[i-1] & cepagri$horario < cepagri$horario[i]])
}
}
dados <- cepagri #dados prontos
meses <- factor(month.abb[as.integer(format(as.Date(dados[["horario"]]),"%m"))], levels = month.abb, ordered = TRUE)
anos <- factor(as.integer(format(as.Date(dados[["horario"]]),"%Y")), levels = c(2015:2020), ordered = TRUE)
h2018 <- dados[dados[["horario"]] > "2017-12-31" & dados[["horario"]] <= "2018-12-31",]
meses2018 <- factor(month.abb[as.integer(format(as.Date(h2018[["horario"]]),"%m"))], levels = month.abb, ordered = TRUE)
h2015 <- dados[dados[["horario"]] >= "2015-01-01" & dados[["horario"]] <= "2015-12-31",]
meses2015 <- factor(month.abb[as.integer(format(as.Date(h2015[["horario"]]),"%m"))], levels = month.abb, ordered = TRUE)
#TEMPERATURA POR HORARIO usando geom_line
plot1 <- ggplot(dados, aes(y=temperatura, x=horario, colour=temperatura))
plot1 <- plot1 + geom_line()
plot1
#VENTO E SENSACAO usando geom_smooth
plot2 <- ggplot(dados, aes(x = sensacao, y = vento)) + geom_smooth()
plot2
#VENTO POR MESES usando boxplot
plot3 <- ggplot(dados,aes(x=meses,y=vento,group=meses,fill=meses))
plot3 <- plot3 +geom_boxplot()
plot3
plot31 <- ggplot(h2015,aes(x=meses2015,y=vento,group=meses2015,fill=meses2015))
plot31 <- plot31 +geom_boxplot()
plot31
plot32 <- ggplot(h2018,aes(x=meses2018,y=vento,group=meses2018,fill=meses2018))
plot32 <- plot32 +geom_boxplot()
plot32
#VENTO UMIDADE E TEMPERATURA usando ggMarginal
plot4 <- ggplot(dados, aes(x=temperatura, y=vento, color=umidade)) + geom_point() + theme_bw()
plot4 <- ggMarginal(plot4, type="density")
plot4
#UMIDADE POR ANOS usando boxplot
plot5 <- ggplot(dados,aes(x=anos,y=umidade,group=anos,fill=anos))
plot5 <- plot5 +geom_boxplot()
plot5
#UMIDADE EM 2018 usando boxplot
plot6 <- ggplot(h2018, aes(y=umidade, x=meses2018, group=meses2018,fill=meses2018))
plot6 <- plot6 + geom_boxplot()
plot6
#VENTO UMIDADE E TEMPERATURA usando ggMarginal
plot4 <- ggplot(dados, aes(x=temperatura, y=vento, color=umidade)) + geom_point() + theme_bw()
plot4 <- ggMarginal(plot4, type="histogram")
plot4
tapply <- (dados)
tabela <- tapply(dados)
tabela <- tapply(dados)
tabelaUmidade <- cbind(h2015$umidade, h2018$umidade)
tabelaUmidade
View(tabelaUmidade)
View(tabelaUmidade)
View(tabelaUmidade)
View(tabelaUmidade)
View(tabelaUmidade)
View(tabelaUmidade)
colnames(tabelaUmidade) <- c("umidade 2015", "umidade 2018")
tabelaUmidade
h2015$umidade
#install.packages("ggplot2")
#install.packages("ggExtra")
#install.packages("gridExtra")
install.packages("xlsReadWrite")
library(xlsReadWrite)
#install.packages("ggplot2")
#install.packages("ggExtra")
#install.packages("gridExtra")
install.packages("xlsReadWrite")
#install.packages("ggplot2")
#install.packages("ggExtra")
#install.packages("gridExtra")
install.packages("xlsx")
write.xlsx(tabelaUmidade,file="tabelaUmidade2015_2018.xlsx")
#install.packages("ggplot2")
#install.packages("ggExtra")
#install.packages("gridExtra")
install.packages("xlsx")
library(xlsx)
write.xlsx(tabelaUmidade,file="tabelaUmidade2015_2018.xlsx")
write.xlsx(tabelaUmidade,file="tabelaUmidade2015_2018.xlsx")
tabelaVentos <- cbind(h2015$ventos, h2018$ventos)
colnames(tabelaVentos) <- c("ventos 2015", "ventos 2018")
tabelaVentos <- cbind(h2015$ventos, h2018$ventos)
colnames(tabelaVentos) <- c("ventos 2015", "ventos 2018")
tabelaVento <- cbind(h2015$vento, h2018$vento)
colnames(tabelaVento) <- c("vento 2015", "vento 2018")
write.xlsx(tabelaVento,file="tabelaVento2015_2018.xlsx")
outubro2015 <- dados[dados[["horario"]] > "2015-09-01" & dados[["horario"]] <= "2015-11-01",]
outubro2018 <- dados[dados[["horario"]] > "2018-09-01" & dados[["horario"]] <= "2018-11-01",]
tabelaVento <- cbind(outubro2015$horario,outubro2015$vento, outubro2018$vento)
colnames(tabelaVento) <- c("vento 2015", "vento 2018")
outubro2015 <- dados[dados[["horario"]] > "2015-09-01" & dados[["horario"]] <= "2015-11-01",]
outubro2018 <- dados[dados[["horario"]] > "2018-09-01" & dados[["horario"]] <= "2018-11-01",]
tabelaVento <- cbind(outubro2015$horario,outubro2015$vento, outubro2018$vento)
colnames(tabelaVento) <- c("data","vento 2015", "vento 2018")
write.xlsx(tabelaVento,file="tabelaVento2015_2018.xlsx")
outubro2015 <- dados[dados[["horario"]] > "2015-09-01" & dados[["horario"]] <= "2015-11-01",]
outubro2018 <- dados[dados[["horario"]] > "2018-09-01" & dados[["horario"]] <= "2018-11-01",]
tabelaVento <- cbind(outubro2015$horario,outubro2015$vento, outubro2018$vento)
colnames(tabelaVento) <- c("data","vento 2015", "vento 2018")
write.xlsx(tabelaVento,file="tabelaVento2015_2018.xlsx")
tabelaVento <- cbind(as.Date(outubro2015$horario),outubro2015$vento, outubro2018$vento)
colnames(tabelaVento) <- c("data","vento 2015", "vento 2018")
write.xlsx(tabelaVento,file="tabelaVento2015_2018.xlsx")
tabelaVento
outubro2015 <- dados[dados[["horario"]] > "2015-09-01" & dados[["horario"]] <= "2015-11-01",]
outubro2018 <- dados[dados[["horario"]] > "2018-09-01" & dados[["horario"]] <= "2018-11-01",]
tabelaVento <- cbind(outubro2015[["horario"]],outubro2015$vento, outubro2018$vento)
colnames(tabelaVento) <- c("data","vento 2015", "vento 2018")
write.xlsx(tabelaVento,file="tabelaVento2015_2018.xlsx")
tabelaVento
tabelaVento <- cbind(as.Date(outubro2015$horario, format="%d/%m/%Y"),outubro2015$vento, outubro2018$vento)
colnames(tabelaVento) <- c("data","vento 2015", "vento 2018")
tabelaVento
tabelaVento <- cbind(as.Date(outubro2018[["horario"]], format="%d/%m/%Y"),outubro2015$vento, outubro2018$vento)
colnames(tabelaVento) <- c("data","vento 2015", "vento 2018")
tabelaVento
as.Date(outubro2015$horario, format="%d/%m/%Y")
outubro2018 <- dados[dados[["horario"]] > "2018-09-01" & dados[["horario"]] <= "2018-11-01",]
tabelaVento <- cbind(as.character(as.Date(outubro2015$horario, format="%d/%m/%Y")),outubro2015$vento, outubro2018$vento)
colnames(tabelaVento) <- c("data","vento 2015", "vento 2018")
tabelaVento
as.character(as.Date(outubro2015$horario, format="%Y/%m/%d")
as.Date(outubro2015$horario, format="%Y/%m/%d")
tabelaVento <- cbind(as.character(as.Date(outubro2015$horario, format="%Y/%m/%d")),outubro2015$vento, outubro2018$vento)
colnames(tabelaVento) <- c("data","vento 2015", "vento 2018")
tabelaVento
outubro2015 <- dados[dados[["horario"]] > "2015-09-01" & dados[["horario"]] <= "2015-11-01",]
outubro2018 <- dados[dados[["horario"]] > "2018-09-01" & dados[["horario"]] <= "2018-11-01",]
tabelaVento <- cbind(as.character(as.Date(outubro2015$horario, format="%d/%m/%y")),outubro2015$vento, outubro2018$vento)
colnames(tabelaVento) <- c("data","vento 2015", "vento 2018")
write.xlsx(tabelaVento,file="tabelaVento2015_2018.xlsx")
summary(dados)
View(dados)
